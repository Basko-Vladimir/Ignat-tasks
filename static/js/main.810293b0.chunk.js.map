{"version":3,"sources":["components/Monday/MessageTelegram/MessageTelegram.module.css","components/Monday/TodoList/TodoList.module.css","components/Monday/MyName/MyName.module.css","components/Monday/TodoList/Input/Input.module.css","components/Tuesday/Preloader/Preloader.module.css","images/preloader.gif","components/Monday/MyName/MyName.jsx","components/Monday/MessageTelegram/MessageTelegram.jsx","components/Monday/TodoList/SumNames/SumNames.jsx","components/Monday/TodoList/Input/Input.jsx","components/Monday/TodoList/AddNameBtn/AddNameBtn.jsx","components/Monday/TodoList/ShowNames/ShowNames.jsx","components/Monday/TodoList/TodoList.jsx","components/Monday/Monday.jsx","components/Tuesday/TodoListHeader/TodoListHeader.jsx","components/Tuesday/TodoListTask/TodoListTask.jsx","components/Tuesday/TodoListTasks/TodoListTasks.jsx","components/Tuesday/TodoListFooter/TodoListFooter.jsx","components/Tuesday/useLocalStorage.js","common/dateOperations.js","components/Tuesday/Tuesday.jsx","components/Navbar/Navbar.jsx","components/Wednesday/Wednesday.jsx","components/Thursday/Thursday.jsx","components/Tuesday/Preloader/Preloader.jsx","redux/store.js","App.jsx","serviceWorker.js","index.jsx","components/Navbar/Navbar.module.css"],"names":["module","exports","MyName","className","styles","myNameBlock","map","quality","i","specialQuality","key","MessageTelegram","props","messageWrap","avatar","src","alt","messageBlock","senderName","message","time","SumNames","names","length","Input","type","onChange","e","changeInputValue","onKeyPress","keyPressEnter","value","inputValue","isEmptyValue","s","error","AddNameBtn","onClick","addName","ShowNames","showNames","n","TodoList","state","setState","newValue","currentTarget","render","block","React","Component","Monday","date","Date","hours","getHours","min","getMinutes","TodoListHeader","title","onAddTask","newText","addTask","onChangeInput","newTitle","placeholder","TodoListTask","editMode","onIsDoneChanged","event","changeStatus","task","id","checked","onTitleChanged","changeTitle","activeEditMode","deactivateEditMode","onDeleteTask","deleteTask","onChangePriority","changeTaskPriority","classPriorityTask","priority","showChangingDate","creatingDate","created","updatedDate","updated","finishedDate","finished","isDone","autoFocus","onBlur","TodoListTasks","tasksElements","tasks","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","saveState","stateAsString","JSON","stringify","localStorage","setItem","operationsDate","getCurrentDate","currentDate","getDate","this","dateFormatCorrect","month","getMonth","year","getFullYear","minutes","Tuesday","nextTaskId","changeTask","taskId","obj","changingDate","newTasks","t","filter","onAddTaskClick","newTask","newFilterValue","alert","defaultState","getItem","parse","forEach","restoreState","Navbar","isShowMenu","showMenu","hideMenu","navbar","onMouseOver","onMouseOut","daysBlock","link","activeClassName","active","to","titleHide","Wednesday","Preloader","preloader","initialState","loading","store","createStore","action","loadingValue","App","setTimeout","setLoading","path","Thursday","connect","dispatch","setLoadingAC","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.810293b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageTelegram_messageWrap__32BY3\",\"avatar\":\"MessageTelegram_avatar__1XFXB\",\"messageBlock\":\"MessageTelegram_messageBlock__1enxH\",\"senderName\":\"MessageTelegram_senderName__ZZrRL\",\"message\":\"MessageTelegram_message__3Lms1\",\"time\":\"MessageTelegram_time__2hEkw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"TodoList_block__1aiT6\",\"showNames\":\"TodoList_showNames__2fi0N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myNameBlock\":\"MyName_myNameBlock__3TUfY\",\"specialQuality\":\"MyName_specialQuality__1jKCX\",\"quality\":\"MyName_quality__1isAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Input_error__1H3Qt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3bQ3Y\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.ec100451.gif\";","import React from \"react\";\r\nimport styles from \"./MyName.module.css\";\r\n\r\nconst MyName = () => {\r\n    let myQualities = ['Рационалист', 'Студент', 'Анимешник', 'Коммунист'];\r\n    return (\r\n        <div className={styles.myNameBlock}>\r\n            <h1>Басько Владимир Георгиевич</h1>\r\n            <h2>Мои качества</h2>\r\n            <ul>\r\n                {myQualities.map((quality, i) => <li className={(i === 1) ? styles.specialQuality : styles.quality} key={i}>{quality}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyName;","import React from \"react\";\r\nimport styles from \"./MessageTelegram.module.css\";\r\n\r\nconst MessageTelegram = (props) => {\r\n    return (\r\n        <div className={styles.messageWrap}>\r\n            <img className={styles.avatar}\r\n                 src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQE8ONSyYrM-yJMooletyTZ-eHJF37_HHkP8SPxNHrGJ04X028k\"\r\n                 alt=\"ava\"/>\r\n            <div className={styles.messageBlock}>\r\n                <h3 className={styles.senderName}>Басько Владимир</h3>\r\n                <p className={styles.message}>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cupiditate deleniti est ipsa molestias nam odit placeat praesentium quod recusandae tempora.\r\n                    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</p>\r\n                <p className={styles.time}>{props.time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MessageTelegram;","import React from \"react\";\r\n\r\nconst SumNames = (props) => {\r\n    return (\r\n        <span>Всего имен: {props.names.length}</span>\r\n    )\r\n};\r\n\r\nexport default SumNames;","import React from \"react\";\r\nimport s from \"./Input.module.css\";\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input type=\"text\"\r\n               onChange={(e) => props.changeInputValue(e)}\r\n               onKeyPress={(e) => props.keyPressEnter(e)}\r\n               value={props.inputValue}\r\n               className={props.isEmptyValue && s.error}/>\r\n    )\r\n};\r\n\r\nexport default Input;","import React from \"react\";\r\n\r\nconst AddNameBtn = (props) => {\r\n    return (\r\n        <button onClick={props.addName}>Add Name</button>\r\n    )\r\n};\r\nexport default AddNameBtn;","import React from \"react\";\r\nimport styles from \"../TodoList.module.css\";\r\n\r\nconst ShowNames = (props) => {\r\n    return (\r\n        <div className={styles.showNames}>\r\n            {props.names.map( (n, i) => <span key={i}>{n} </span>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ShowNames;","import React from \"react\";\r\nimport styles from \"./TodoList.module.css\"\r\nimport SumNames from \"./SumNames/SumNames\";\r\nimport Input from \"./Input/Input\";\r\nimport AddNameBtn from \"./AddNameBtn/AddNameBtn\";\r\nimport ShowNames from \"./ShowNames/ShowNames\";\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    state = {\r\n        names: [],\r\n        inputValue: '',\r\n        isEmptyValue: false\r\n    };\r\n\r\n    addName = () => {\r\n        if (this.state.inputValue) {\r\n            this.setState({\r\n                ...this.state,\r\n                names: [...this.state.names, this.state.inputValue],\r\n                inputValue: ''\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isEmptyValue: true\r\n            })\r\n        }\r\n    };\r\n\r\n    changeInputValue = (e) => {\r\n        let newValue = e.currentTarget.value;\r\n        this.setState({\r\n            inputValue: newValue,\r\n            isEmptyValue: false\r\n        })\r\n    };\r\n\r\n    keyPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.addName()\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.block}>\r\n                <SumNames names={this.state.names}/>\r\n                <div>\r\n                    <Input inputValue={this.state.inputValue}\r\n                           changeInputValue={this.changeInputValue}\r\n                           keyPressEnter={this.keyPressEnter}\r\n                           isEmptyValue={this.state.isEmptyValue}/>\r\n                    <AddNameBtn addName={this.addName} />\r\n                </div>\r\n                <ShowNames names={this.state.names}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport MyName from \"./MyName/MyName\";\r\nimport MessageTelegram from \"./MessageTelegram/MessageTelegram\";\r\nimport TodoList from \"./TodoList/TodoList\";\r\n\r\nconst Monday = () => {\r\n    let date = new Date();\r\n    let hours = date.getHours();\r\n    let min = date.getMinutes();\r\n    hours = (hours < 10) ? `0${hours}` : hours;\r\n    min = (min < 10) ? `0${min}` : min;\r\n    let time = `${hours}:${min}`;\r\n    return (\r\n        <>\r\n            <MyName/>\r\n            <MessageTelegram time={time}/>\r\n            <TodoList/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Monday;","import React from 'react';\r\nimport '../Tuesday.css';\r\n\r\nclass TodoListHeader extends React.Component {\r\n\r\n    state = {\r\n        error: false,\r\n        title: ''\r\n    };\r\n\r\n    onAddTask = () => {\r\n        let newText = this.state.title;\r\n        if (!newText) {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.props.addTask(newText);\r\n            this.setState({\r\n                error: false,\r\n                title: ''\r\n            })\r\n        }\r\n    };\r\n\r\n    onChangeInput = (e) => {\r\n        let newTitle = e.currentTarget.value;\r\n        this.setState({\r\n            error: false,\r\n            title: newTitle\r\n        })\r\n\r\n    };\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.onAddTask()\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"todoList-header\">\r\n                <h3 className=\"todoList-header__title\">What to Learn</h3>\r\n                <div className=\"todoList-newTaskForm\">\r\n                    <input type=\"text\"\r\n                           value={this.state.title}\r\n                           placeholder=\"New task name\"\r\n                           className={this.state.error ? 'error' : '' }\r\n                           onChange={(e) => this.onChangeInput(e)}\r\n                           onKeyPress={(e) => this.onKeyPress(e)}/>\r\n                    <button onClick={this.onAddTask}>Add</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListHeader;\r\n","import React from 'react';\r\nimport '../Tuesday.css';\r\n\r\nclass TodoListTask extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n    };\r\n\r\n    onIsDoneChanged = (event) => {\r\n        this.props.changeStatus(this.props.task.id, event.currentTarget.checked);\r\n    };\r\n\r\n    onTitleChanged = (event) => {\r\n        this.props.changeTitle(this.props.task.id, event.currentTarget.value)\r\n    };\r\n\r\n    activeEditMode = () => {\r\n        this.setState({editMode: true})\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({editMode: false})\r\n    };\r\n\r\n    onDeleteTask = () => {\r\n        this.props.deleteTask(this.props.task.id);\r\n    };\r\n\r\n    onChangePriority = (e) => {\r\n        this.props.changeTaskPriority(e.currentTarget.value, this.props.task.id)\r\n    };\r\n\r\n    classPriorityTask = (priority) => {\r\n        switch (priority) {\r\n            case 'low':\r\n                return 'lowPriority';\r\n            case 'middle':\r\n                return 'middlePriority';\r\n            case 'high':\r\n                return 'highPriority';\r\n            default: return '';\r\n        }\r\n    };\r\n\r\n    showChangingDate = () => {\r\n        let creatingDate = this.props.task.created;\r\n        let updatedDate = this.props.task.updated ? this.props.task.updated : `Задача не изменялась`;\r\n        let finishedDate = this.props.task.finished ? this.props.task.finished : `Задание не выполнено`;\r\n        return `Дата создания : ${creatingDate} \\nДата изменения: ${updatedDate} \\n${this.props.task.isDone ? 'Задание выполнено: ' + finishedDate : ''}`;\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n                <div title={this.showChangingDate()} className={this.props.task.isDone ? `todoList-task done` : `todoList-task ${this.classPriorityTask(this.props.task.priority)}`}>\r\n                    <input type=\"checkbox\" checked={this.props.task.isDone}\r\n                           onChange={this.onIsDoneChanged}/>\r\n                    <div>\r\n                        { this.state.editMode\r\n                            ? <input autoFocus={true}\r\n                                     value={this.props.task.title}\r\n                                     onBlur={this.deactivateEditMode}\r\n                                     onChange={this.onTitleChanged}/>\r\n                            : <span onClick={this.activeEditMode}>{`${this.props.task.id} - ${this.props.task.title}` }</span>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <span> Priority: <select value={this.props.task.priority} onChange={this.onChangePriority}>\r\n                                            <option value={'low'}>low</option>\r\n                                            <option value={'middle'}>middle</option>\r\n                                            <option value={'high'}>high</option>\r\n                                        </select>\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={this.onDeleteTask}>Delete</button>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTask;\r\n// this.classPriorityTask(this.props.task.priority)\r\n","import React from 'react';\r\nimport '../Tuesday.css';\r\nimport TodoListTask from \"../TodoListTask/TodoListTask\";\r\n\r\n\r\nclass TodoListTasks extends React.Component {\r\n    render = () => {\r\n        let tasksElements = this.props.tasks.map(\r\n                task => <TodoListTask key={task.id}\r\n                                      task={task}\r\n                                      changeTitle={this.props.changeTitle}\r\n                                      changeTaskPriority={this.props.changeTaskPriority}\r\n                                      changeStatus={this.props.changeStatus}\r\n                                      deleteTask={this.props.deleteTask} />);\r\n        return (\r\n            <div className=\"todoList-tasks\">\r\n                {tasksElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;\r\n\r\n","import React from 'react';\r\nimport '../Tuesday.css';\r\n\r\nclass TodoListFooter extends React.Component {\r\n    state = {\r\n        isHidden: false\r\n    };\r\n\r\n    onAllFilterClick = () => {this.props.changeFilter('All')};\r\n    onCompletedFilterClick = () => {this.props.changeFilter('Completed')};\r\n    onActiveFilterClick = () => {this.props.changeFilter('Active')};\r\n    onShowFiltersClick = () => {this.setState({isHidden: false})};\r\n    onHideFiltersClick = () => {this.setState({isHidden: true})};\r\n\r\n    render = () => {\r\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\r\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\r\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\r\n\r\n        return (\r\n            <div className=\"todoList-footer\">\r\n                { !this.state.isHidden && <div>\r\n                    <button onClick={this.onAllFilterClick} className={classForAll}>All</button>\r\n                    <button onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</button>\r\n                    <button onClick={this.onActiveFilterClick} className={classForActive}>Active</button>\r\n                </div>}\r\n                {!this.state.isHidden && <span onClick={this.onHideFiltersClick}>hide</span>}\r\n                {this.state.isHidden && <span onClick={this.onShowFiltersClick}>show</span>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\n","\r\nexport let saveState = (key, state) => {\r\n        let stateAsString = JSON.stringify(state);\r\n        localStorage.setItem(key, stateAsString);\r\n        };\r\n\r\nexport let restoreState = (key, defaultState) => {\r\n                let stateAsString = localStorage.getItem(key);\r\n                if (stateAsString != null) {\r\n                    defaultState = JSON.parse(stateAsString);\r\n                    defaultState.tasks.forEach( t => {\r\n                        if (t.id >= defaultState.nextTaskId){\r\n                            defaultState.nextTaskId = t.id + 1;\r\n                        }\r\n                    });\r\n                    return defaultState;\r\n                }\r\n            };\r\n\r\n","\r\nexport const operationsDate = {\r\n    getCurrentDate() {\r\n        let currentDate = new Date();\r\n\r\n        let date = +currentDate.getDate();\r\n        date = this.dateFormatCorrect(date);\r\n\r\n        let month = +currentDate.getMonth() + 1;\r\n        month = this.dateFormatCorrect(month);\r\n\r\n        let year = +currentDate.getFullYear();\r\n\r\n        let hours = +currentDate.getHours();\r\n        hours = this.dateFormatCorrect(hours);\r\n\r\n        let minutes = +currentDate.getMinutes();\r\n        minutes = this.dateFormatCorrect(minutes);\r\n\r\n        return `${date}.${month}.${year} ${hours}:${minutes}`\r\n    },\r\n\r\n    dateFormatCorrect(value) {\r\n        if (value < 10) {\r\n            value = `0${value}`\r\n        }\r\n        return value\r\n    }\r\n};","import React from 'react';\r\nimport './Tuesday.css';\r\nimport TodoListHeader from \"./TodoListHeader/TodoListHeader\";\r\nimport TodoListTasks from \"./TodoListTasks/TodoListTasks\";\r\nimport TodoListFooter from \"./TodoListFooter/TodoListFooter\";\r\nimport {saveState, restoreState} from \"./useLocalStorage\";\r\nimport {operationsDate} from \"../../common/dateOperations\";\r\n\r\n\r\nclass Tuesday extends React.Component {\r\n    componentDidMount() {\r\n        this.setState(restoreState('our-state', this.state));\r\n    }\r\n\r\n    state = {\r\n        tasks: [],\r\n        filterValue: \"All\",\r\n        nextTaskId: 0\r\n    };\r\n\r\n    changeTask = (taskId, obj) => {\r\n        let changingDate = operationsDate.getCurrentDate();\r\n        let newTasks = this.state.tasks.map( t => {\r\n            if (t.id === taskId && obj.isDone){\r\n                return {...t, ...obj, finished: changingDate}\r\n            } else if (t.id === taskId) {\r\n                return {...t, ...obj, updated: changingDate}\r\n            } else {\r\n                return t\r\n            }\r\n        });\r\n        this.setState({\r\n            tasks:newTasks\r\n        }, () => saveState('our-state', this.state) )\r\n    };\r\n\r\n    changeStatus = (taskId, isDone) => {\r\n        this.changeTask(taskId, {isDone})\r\n    };\r\n\r\n    changeTitle = (taskId, title) => {\r\n        this.changeTask(taskId, {title})\r\n    };\r\n\r\n    deleteTask = (taskId) => {\r\n        let newTasks = this.state.tasks.filter( t => t.id !== taskId);\r\n        this.setState({\r\n            tasks: newTasks\r\n        }, () => saveState('our-state', this.state) )\r\n    };\r\n\r\n    onAddTaskClick = (newText) => {\r\n        let creatingDate = operationsDate.getCurrentDate();\r\n        let newTask = {\r\n            id: this.state.nextTaskId,\r\n            title: newText,\r\n            isDone: false,\r\n            priority: \"low\",\r\n            created: creatingDate\r\n        };\r\n        let newTasks = [...this.state.tasks, newTask];\r\n        this.setState( {\r\n            tasks: newTasks,\r\n            nextTaskId: this.state.nextTaskId + 1\r\n        }, () => saveState('our-state', this.state) );\r\n    };\r\n\r\n    changeFilter = (newFilterValue) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        })\r\n    };\r\n\r\n    changeTaskPriority = (priority, taskId) => {\r\n        this.changeTask(taskId, {priority});\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"tuesday\">\r\n                <div className=\"todoList\">\r\n                    <TodoListHeader addTask={this.onAddTaskClick}/>\r\n                    <TodoListTasks  changeStatus={this.changeStatus}\r\n                                    changeTaskPriority={this.changeTaskPriority}\r\n                                    changeTitle={this.changeTitle}\r\n                                    deleteTask={this.deleteTask}\r\n                                    tasks={this.state.tasks.filter( t => {\r\n                                        switch (this.state.filterValue) {\r\n                                            case 'All':\r\n                                                return true;\r\n                                            case 'Active':\r\n                                                return t.isDone;\r\n                                            case 'Completed':\r\n                                                return !t.isDone;\r\n                                            default:\r\n                                                return alert('error');\r\n                                    }})}/>\r\n                    <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tuesday;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\";\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    state = {\r\n        isShowMenu: false\r\n    };\r\n\r\n    showMenu = () => {\r\n        this.setState({\r\n            isShowMenu: true\r\n        })\r\n    };\r\n\r\n    hideMenu = () => {\r\n        this.setState({\r\n            isShowMenu: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.isShowMenu ? s.showMenu : s.navbar}\r\n                 onMouseOver={this.showMenu}\r\n                 onMouseOut={this.hideMenu}>\r\n                <div className={s.daysBlock} >\r\n                    <NavLink className={s.link} activeClassName={s.active} to={'/monday'}>\r\n                        <span>Monday </span>\r\n                    </NavLink>\r\n                    <NavLink className={s.link} activeClassName={s.active} to={'/tuesday'}>\r\n                        <span>Tuesday</span>\r\n                    </NavLink>\r\n                    <NavLink className={s.link} activeClassName={s.active} to={'/wednesday'}>\r\n                        <span>Wednesday</span>\r\n                    </NavLink>\r\n                    <NavLink className={s.link} activeClassName={s.active} to={'/thursday'}>\r\n                        <span>Thursday</span>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={this.state.isShowMenu ? s.titleHide : s.title }>Menu</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst Wednesday = () => {\r\n    return (\r\n        <div>Here will be tasks from wednesday</div>\r\n    )\r\n};\r\nexport default Wednesday;","import React from \"react\";\r\n\r\nconst Tuesday = () => {\r\n    return (\r\n        <div>Here will be tasks from thursday</div>\r\n    )\r\n};\r\nexport default Tuesday;","import React from \"react\";\r\nimport s from \"./Preloader.module.css\";\r\nimport preloader from \"../../../images/preloader.gif\";\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={preloader} alt=\"Preloader\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import {createStore} from \"redux\";\r\n\r\nconst SET_LOADING = 'SET_LOADING';\r\n\r\nconst initialState = {\r\n    loading: true\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.loadingValue\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setLoadingAC = (loadingValue) => ({type: SET_LOADING, loadingValue});\r\n\r\nconst store = createStore(reducer);\r\nexport default store;","import React from 'react';\r\nimport './App.css';\r\nimport Monday from \"./components/Monday/Monday\";\r\nimport Tuesday from \"./components/Tuesday/Tuesday\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Wednesday from \"./components/Wednesday/Wednesday\";\r\nimport Thursday from \"./components/Thursday/Thursday\";\r\nimport Preloader from \"./components/Tuesday/Preloader/Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {setLoadingAC} from \"./redux/store\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        setTimeout(() => this.props.setLoading(false), 3000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                { this.props.loading\r\n                ? <Preloader/>\r\n                : <div>\r\n                    <Navbar/>\r\n                    <div>\r\n                        <Route path={'/monday'} render={() => <Monday/>} />\r\n                        <Route path={'/tuesday'} render={() => <Tuesday/>} />\r\n                        <Route path={'/wednesday'} render={() => <Wednesday/>} />\r\n                        <Route path={'/thursday'} render={() => <Thursday/>} />\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading\r\n    }\r\n};\r\n\r\nconst  mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLoading: (loadingValue) => {\r\n            dispatch(setLoadingAC(loadingValue))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1ylXY\",\"showMenu\":\"Navbar_showMenu__2ULoZ\",\"daysBlock\":\"Navbar_daysBlock__3sQyI\",\"title\":\"Navbar_title__31G1m\",\"titleHide\":\"Navbar_titleHide__1ye1T\",\"link\":\"Navbar_link__2juq7\",\"active\":\"Navbar_active__1dP6n\"};"],"sourceRoot":""}