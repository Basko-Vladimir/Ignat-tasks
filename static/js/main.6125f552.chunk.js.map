{"version":3,"sources":["components/Monday/TodoList/TodoList.module.css","components/Monday/MyName/MyName.module.css","components/Navbar/Navbar.module.css","components/Monday/TodoList/Input/Input.module.css","components/Monday/MyName/MyName.jsx","components/Monday/MessageTelegram/MessageTelegram.jsx","components/Monday/TodoList/SumNames/SumNames.jsx","components/Monday/TodoList/Input/Input.jsx","components/Monday/TodoList/AddNameBtn/AddNameBtn.jsx","components/Monday/TodoList/ShowNames/ShowNames.jsx","components/Monday/TodoList/TodoList.jsx","components/Monday/Monday.jsx","components/Tuesday/Tuesday.jsx","components/Navbar/Navbar.jsx","components/Wednesday/Wednesday.jsx","components/Thursday/Thursday.jsx","App.jsx","serviceWorker.js","index.jsx","components/Monday/MessageTelegram/MessageTelegram.module.css"],"names":["module","exports","MyName","className","styles","myNameBlock","map","quality","i","specialQuality","key","MessageTelegram","props","messageWrap","avatar","src","alt","messageBlock","senderName","message","time","SumNames","names","length","Input","type","onChange","e","changeInputValue","onKeyPress","keyPressEnter","value","inputValue","isEmptyValue","s","error","AddNameBtn","onClick","addName","ShowNames","showNames","n","TodoList","state","setState","newValue","currentTarget","render","block","React","Component","Monday","date","Date","hours","getHours","min","getMinutes","Tuesday","Navbar","isShowMenu","showMenu","hideMenu","this","navbar","onMouseOver","onMouseOut","daysBlock","link","activeClassName","active","to","titleHide","title","Wednesday","Thursday","App","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.6125f552.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"TodoList_block__1aiT6\",\"showNames\":\"TodoList_showNames__2fi0N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myNameBlock\":\"MyName_myNameBlock__3TUfY\",\"specialQuality\":\"MyName_specialQuality__1jKCX\",\"quality\":\"MyName_quality__1isAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1ylXY\",\"showMenu\":\"Navbar_showMenu__2ULoZ\",\"daysBlock\":\"Navbar_daysBlock__3sQyI\",\"title\":\"Navbar_title__31G1m\",\"titleHide\":\"Navbar_titleHide__1ye1T\",\"link\":\"Navbar_link__2juq7\",\"active\":\"Navbar_active__1dP6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Input_error__1H3Qt\"};","import React from \"react\";\r\nimport styles from \"./MyName.module.css\";\r\n\r\nconst MyName = () => {\r\n    let myQualities = ['Рационалист', 'Студент', 'Анимешник', 'Коммунист'];\r\n    return (\r\n        <div className={styles.myNameBlock}>\r\n            <h1>Басько Владимир Георгиевич</h1>\r\n            <h2>Мои качества</h2>\r\n            <ul>\r\n                {myQualities.map((quality, i) => <li className={(i === 1) ? styles.specialQuality : styles.quality} key={i}>{quality}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyName;","import React from \"react\";\r\nimport styles from \"./MessageTelegram.module.css\";\r\n\r\nconst MessageTelegram = (props) => {\r\n    return (\r\n        <div className={styles.messageWrap}>\r\n            <img className={styles.avatar}\r\n                 src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQE8ONSyYrM-yJMooletyTZ-eHJF37_HHkP8SPxNHrGJ04X028k\"\r\n                 alt=\"ava\"/>\r\n            <div className={styles.messageBlock}>\r\n                <h3 className={styles.senderName}>Басько Владимир</h3>\r\n                <p className={styles.message}>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cupiditate deleniti est ipsa molestias nam odit placeat praesentium quod recusandae tempora.\r\n                    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</p>\r\n                <p className={styles.time}>{props.time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MessageTelegram;","import React from \"react\";\r\n\r\nconst SumNames = (props) => {\r\n    return (\r\n        <span>Всего имен: {props.names.length}</span>\r\n    )\r\n};\r\n\r\nexport default SumNames;","import React from \"react\";\r\nimport s from \"./Input.module.css\";\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input type=\"text\"\r\n               onChange={(e) => props.changeInputValue(e)}\r\n               onKeyPress={(e) => props.keyPressEnter(e)}\r\n               value={props.inputValue}\r\n               className={props.isEmptyValue && s.error}/>\r\n    )\r\n};\r\n\r\nexport default Input;","import React from \"react\";\r\n\r\nconst AddNameBtn = (props) => {\r\n    return (\r\n        <button onClick={props.addName}>Add Name</button>\r\n    )\r\n};\r\nexport default AddNameBtn;","import React from \"react\";\r\nimport styles from \"../TodoList.module.css\";\r\n\r\nconst ShowNames = (props) => {\r\n    return (\r\n        <div className={styles.showNames}>\r\n            {props.names.map( (n, i) => <span key={i}>{n} </span>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ShowNames;","import React from \"react\";\r\nimport styles from \"./TodoList.module.css\"\r\nimport SumNames from \"./SumNames/SumNames\";\r\nimport Input from \"./Input/Input\";\r\nimport AddNameBtn from \"./AddNameBtn/AddNameBtn\";\r\nimport ShowNames from \"./ShowNames/ShowNames\";\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    state = {\r\n        names: [],\r\n        inputValue: '',\r\n        isEmptyValue: false\r\n    };\r\n\r\n    addName = () => {\r\n        if (this.state.inputValue) {\r\n            this.setState({\r\n                ...this.state,\r\n                names: [...this.state.names, this.state.inputValue],\r\n                inputValue: ''\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isEmptyValue: true\r\n            })\r\n        }\r\n    };\r\n\r\n    changeInputValue = (e) => {\r\n        let newValue = e.currentTarget.value;\r\n        this.setState({\r\n            inputValue: newValue,\r\n            isEmptyValue: false\r\n        })\r\n    };\r\n\r\n    keyPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.addName()\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.block}>\r\n                <SumNames names={this.state.names}/>\r\n                <div>\r\n                    <Input inputValue={this.state.inputValue}\r\n                           changeInputValue={this.changeInputValue}\r\n                           keyPressEnter={this.keyPressEnter}\r\n                           isEmptyValue={this.state.isEmptyValue}/>\r\n                    <AddNameBtn addName={this.addName} />\r\n                </div>\r\n                <ShowNames names={this.state.names}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport MyName from \"./MyName/MyName\";\r\nimport MessageTelegram from \"./MessageTelegram/MessageTelegram\";\r\nimport TodoList from \"./TodoList/TodoList\";\r\n\r\nconst Monday = () => {\r\n    let date = new Date();\r\n    let hours = date.getHours();\r\n    let min = date.getMinutes();\r\n    hours = (hours < 10) ? `0${hours}` : hours;\r\n    min = (min < 10) ? `0${min}` : min;\r\n    let time = `${hours}:${min}`;\r\n    return (\r\n        <>\r\n            <MyName/>\r\n            <MessageTelegram time={time}/>\r\n            <TodoList/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Monday;","import React from \"react\";\r\n\r\nconst Tuesday = () => {\r\n    return (\r\n        <div>Here will be tasks from tuesday</div>\r\n    )\r\n};\r\nexport default Tuesday;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\";\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    state = {\r\n        isShowMenu: false\r\n    };\r\n\r\n    showMenu = () => {\r\n        this.setState({\r\n            isShowMenu: true\r\n        })\r\n    };\r\n\r\n    hideMenu = () => {\r\n        this.setState({\r\n            isShowMenu: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.isShowMenu ? s.showMenu : s.navbar}\r\n                 onMouseOver={this.showMenu}\r\n                 onMouseOut={this.hideMenu}>\r\n                <div className={s.daysBlock} >\r\n                    <NavLink className={s.link} activeClassName={s.active} to={'/monday'}>\r\n                        <span>Monday </span>\r\n                    </NavLink>\r\n                    <NavLink className={s.link} activeClassName={s.active} to={'/tuesday'}>\r\n                        <span>Tuesday</span>\r\n                    </NavLink>\r\n                    <NavLink className={s.link} activeClassName={s.active} to={'/wednesday'}>\r\n                        <span>Wednesday</span>\r\n                    </NavLink>\r\n                    <NavLink className={s.link} activeClassName={s.active} to={'/thursday'}>\r\n                        <span>Thursday</span>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={this.state.isShowMenu ? s.titleHide : s.title }>Menu</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst Wednesday = () => {\r\n    return (\r\n        <div>Here will be tasks from wednesday</div>\r\n    )\r\n};\r\nexport default Wednesday;","import React from \"react\";\r\n\r\nconst Thursday = () => {\r\n    return (\r\n        <div>Here will be tasks from thursday</div>\r\n    )\r\n};\r\nexport default Thursday;","import React from 'react';\r\nimport './App.css';\r\nimport Monday from \"./components/Monday/Monday\";\r\nimport Tuesday from \"./components/Tuesday/Tuesday\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Wednesday from \"./components/Wednesday/Wednesday\";\r\nimport Thursday from \"./components/Thursday/Thursday\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <div>\r\n                <Route path={'/monday'} render={() => <Monday/>} />\r\n                <Route path={'/tuesday'} render={() => <Tuesday/>} />\r\n                <Route path={'/wednesday'} render={() => <Wednesday/>} />\r\n                <Route path={'/thursday'} render={() => <Thursday/>} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageTelegram_messageWrap__32BY3\",\"avatar\":\"MessageTelegram_avatar__1XFXB\",\"messageBlock\":\"MessageTelegram_messageBlock__1enxH\",\"senderName\":\"MessageTelegram_senderName__ZZrRL\",\"message\":\"MessageTelegram_message__3Lms1\",\"time\":\"MessageTelegram_time__2hEkw\"};"],"sourceRoot":""}